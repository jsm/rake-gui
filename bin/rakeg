#!/usr/bin/env ruby

#--
# Copyright (c) 2003, 2004, 2005, 2006, 2007  Jim Weirich
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#++

begin
  require 'rubygems'
  gem 'rake'
  gem 'rake-gui'
rescue LoadError
end

require 'rake'
require 'rake/gui'

Rake::Gui.activate
server = Rake::Gui.start_server

Signal.trap("INT") {
  # Ctrl-C was pressed...
  $stdout.puts "\rCaught interrupt - killing server..."

  # Kill child process...
  server.exit

  # Don't catch any more interrupts
  Signal.trap("INT", "DEFAULT")
}

caught_exception = nil
begin
  Rake.application.run
rescue Exception => e
  caught_exception = e
end

$stdout.puts 'Rake Execution finished. You may exit at any time by using CTRL-C'

server.wait
$stdout.puts "Exiting..."

# Raise error if there was one
if caught_exception
  $stdout.puts 'Rake Execution Failed'.colorize(:red)
  raise caught_exception, caught_exception.message, caught_exception.backtrace
end
